<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Tech Notes</title>
        <link>https://securesnowball.github.io/posts/</link>
        <description>Recent content in Posts on Tech Notes</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 19 Dec 2021 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://securesnowball.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>My Tmux setup</title>
            <link>https://securesnowball.github.io/posts/2021/12/my-tmux-setup/</link>
            <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
            
            <guid>https://securesnowball.github.io/posts/2021/12/my-tmux-setup/</guid>
            <description>Install PHP in Ubuntu sudo apt install tmux # Update according to your distro Install OH My Tmux This is not a must have requirement but it is recommended unless you want a full DIY setup, You can also follow official installation instructions on the repo REAME
Link: https://github.com/gpakosz/.tmux
cd git clone https://github.com/gpakosz/.tmux.git ln -s -f .tmux/.tmux.conf cp .tmux/.tmux.conf.local . Add the following lines to tmux config Open .tmux.conf.local file and add the following line, it will allow input sync in all panes using CTRL + x</description>
            <content type="html"><![CDATA[<h2 id="install-php-in-ubuntu">Install PHP in Ubuntu</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo apt install tmux <span style="color:#75715e"># Update according to your distro</span>
</code></pre></div><h2 id="install-oh-my-tmux">Install OH My Tmux</h2>
<p>This is not a must have requirement but it is recommended unless you want a full DIY setup, You can also follow official installation instructions on the repo REAME</p>
<p>Link: <a href="https://github.com/gpakosz/.tmux">https://github.com/gpakosz/.tmux</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cd
git clone https://github.com/gpakosz/.tmux.git
ln -s -f .tmux/.tmux.conf
cp .tmux/.tmux.conf.local .
</code></pre></div><h2 id="add-the-following-lines-to-tmux-config">Add the following lines to tmux config</h2>
<p>Open <code>.tmux.conf.local</code> file and add the following line, it will allow input sync in all panes using <code>CTRL + x</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-txt" data-lang="txt">bind -n C-x setw synchronize-panes
</code></pre></div><h3 id="how-to-use-tmux">How to use tmux</h3>
<p>Start a new unnamed session</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">tmux new <span style="color:#75715e"># Not recommended but works fine for all user cases</span>
</code></pre></div><p>Start a new named session</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">tmux new -s session_name
</code></pre></div><p>Detach session and come back to origin shell</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-txt" data-lang="txt">CTRL + b
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Setup Laravel hosting in Ubuntu using Nginx</title>
            <link>https://securesnowball.github.io/posts/2021/12/setup-laravel-hosting-in-ubuntu-using-nginx/</link>
            <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
            
            <guid>https://securesnowball.github.io/posts/2021/12/setup-laravel-hosting-in-ubuntu-using-nginx/</guid>
            <description>Install PHP in Ubuntu sudo apt install php php-mbstring php-curl php-xml php-intl php-gd php-zip php-mysql zip sudo default-mysql-server Installing Composer curl -sS https://getcomposer.org/installer | php sudo mv composer.phar /usr/local/bin/composer Projects Setup Create a project in your home directory
cd ~ mkdir ~/Projects And clone your project in Projects folder
Setting Permissions on Projects https://stackoverflow.com/questions/30639174/how-to-set-up-file-permissions-for-laravel I prefer me as owner because it allows rsync to copy files to the server without any permission issues.</description>
            <content type="html"><![CDATA[<h2 id="install-php-in-ubuntu">Install PHP in Ubuntu</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo apt install php php-mbstring php-curl php-xml php-intl php-gd php-zip php-mysql zip
sudo default-mysql-server
</code></pre></div><h3 id="installing-composer">Installing Composer</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer
</code></pre></div><h3 id="projects-setup">Projects Setup</h3>
<p>Create a project in your home directory</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cd ~
mkdir ~/Projects
</code></pre></div><p>And clone your project in <code>Projects</code> folder</p>
<h3 id="setting-permissions-on-projects">Setting Permissions on Projects</h3>
<p><a href="https://stackoverflow.com/questions/30639174/how-to-set-up-file-permissions-for-laravel">https://stackoverflow.com/questions/30639174/how-to-set-up-file-permissions-for-laravel</a>
I prefer me as owner because it allows rsync to copy files to the server without any permission issues.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">PROJECT_PATH<span style="color:#f92672">=</span>~/Projects/&lt;project_path&gt;

<span style="color:#75715e"># Update folder ownership</span>
cd $PROJECT_PATH
sudo chown -R $USER:www-data .
sudo find . -type f -exec chmod <span style="color:#ae81ff">664</span> <span style="color:#f92672">{}</span> <span style="color:#ae81ff">\;</span>
sudo find . -type d -exec chmod <span style="color:#ae81ff">775</span> <span style="color:#f92672">{}</span> <span style="color:#ae81ff">\;</span>
sudo chgrp -R www-data storage bootstrap/cache
sudo chmod -R ug+rwx storage bootstrap/cache
</code></pre></div><h3 id="deployment">Deployment</h3>
<p>Put the following in the nginx virtual host file, Official docs are at: <a href="https://laravel.com/docs/8.x/deployment">https://laravel.com/docs/8.x/deployment</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">server {
    listen 80;
    listen [::]:80;
    server_name example.com; // Real server name
    root $PROJECT_PATH/public; // Value of $PROJECT_PATH

    add_header X-Frame-Options &#34;SAMEORIGIN&#34;;
    add_header X-Content-Type-Options &#34;nosniff&#34;;

    index index.php;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
</code></pre></div><h3 id="github-actions-pipeline">GitHub Actions Pipeline</h3>
<p>If you are using GitHub Actions and a Ubuntu VPS then you can use the following config to setup auto deployment.
Create a file named <code>.github/workflows/deploy.yml</code>.</p>
<p>You need to set the following secrets in your GitHub repository and setup SSH and rsync in your server</p>
<ul>
<li>SSH_KEY: Private SSH Key</li>
<li>HOST: IP address or hostname of the server</li>
<li>PORT: SSH port, 22 unless you have changed it</li>
<li>USER: Username of the VPS, can be ubuntu, ec-user or something else</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">name</span>: <span style="color:#ae81ff">Deploy Production</span>
<span style="color:#f92672">on</span>:
  <span style="color:#f92672">push</span>:
    <span style="color:#f92672">branches</span>: [<span style="color:#ae81ff">master]</span>

<span style="color:#f92672">jobs</span>:
  <span style="color:#f92672">deploy</span>:
    <span style="color:#f92672">runs-on</span>: <span style="color:#ae81ff">ubuntu-latest</span>
    <span style="color:#f92672">steps</span>:
      - <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">actions/checkout@v2</span>
      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Install rsync</span>
        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">sudo apt install rsync -y</span>
      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Copy build</span>
        <span style="color:#f92672">run</span>: |<span style="color:#e6db74">
</span><span style="color:#e6db74">          rm -rf .git
</span><span style="color:#e6db74">          rm -rf .github
</span><span style="color:#e6db74">          eval $(ssh-agent -s)
</span><span style="color:#e6db74">          echo &#34;$SSH_KEY&#34; | tr -d &#39;\r&#39; | ssh-add -
</span><span style="color:#e6db74">          mkdir -p ~/.ssh
</span><span style="color:#e6db74">          chmod 700 ~/.ssh
</span><span style="color:#e6db74">          ssh-keyscan -p $PORT $HOST &gt;&gt; ~/.ssh/known_hosts
</span><span style="color:#e6db74">          chmod 644 ~/.ssh/known_hosts
</span><span style="color:#e6db74">          rsync -az -e &#34;ssh -p $PORT&#34; ./ $USER@$HOST:$PROJECT_FOLDER
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;sudo chown -R $USER:www-data $PROJECT_FOLDER&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;sudo find $PROJECT_FOLDER -type f -exec chmod 664 {} \;&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;sudo find $PROJECT_FOLDER -type d -exec chmod 775 {} \;&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;sudo chgrp -R www-data $PROJECT_FOLDER/storage $PROJECT_FOLDER/bootstrap/cache&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;sudo chmod -R ug+rwx $PROJECT_FOLDER/storage $PROJECT_FOLDER/bootstrap/cache&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; composer install --no-dev -o&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan migrate --force&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan view:clear&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan view:cache&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan config:clear&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan config:cache&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan route:clear&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan route:cache&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan event:clear&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan event:cache&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan optimize&#34;
</span><span style="color:#e6db74">          ssh $USER@$HOST -p $PORT &#34;cd $PROJECT_FOLDER; php artisan storage:link&#34;</span>          
        <span style="color:#f92672">env</span>:
          <span style="color:#f92672">PROJECT_FOLDER</span>: <span style="color:#ae81ff">$PROJECT_PATH // Put real value of project path here</span>
          <span style="color:#f92672">SSH_KEY</span>: <span style="color:#ae81ff">${{ secrets.SSH_KEY }}</span>
          <span style="color:#f92672">HOST</span>: <span style="color:#ae81ff">${{ secrets.HOST }}</span>
          <span style="color:#f92672">PORT</span>: <span style="color:#ae81ff">${{ secrets.PORT }}</span>
          <span style="color:#f92672">USER</span>: <span style="color:#ae81ff">${{ secrets.USER }}</span>
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Convert HEIC to JPG in Ubuntu</title>
            <link>https://securesnowball.github.io/posts/2021/11/convert-heic-to-jpg-in-ubuntu/</link>
            <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
            
            <guid>https://securesnowball.github.io/posts/2021/11/convert-heic-to-jpg-in-ubuntu/</guid>
            <description>Convert HEIC to JPG in Ubuntu Sometimes I have to share files to an old Android device which is not powerful enough to handle jpg so I follow these steps to convert HEIC to JPG
Install dependencies This will install package we need to convert images
sudo apt install libheif-examples Convert images The following command will convert all images in current folder
for file in *.heic do heif-convert $file ${file/%.heic/.jpg} done </description>
            <content type="html"><![CDATA[<h2 id="convert-heic-to-jpg-in-ubuntu">Convert HEIC to JPG in Ubuntu</h2>
<p>Sometimes I have to share files to an old Android device which is not powerful enough to handle jpg so I follow these steps to convert HEIC to JPG</p>
<h3 id="install-dependencies">Install dependencies</h3>
<p>This will install package we need to convert images</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo apt install libheif-examples
</code></pre></div><h3 id="convert-images">Convert images</h3>
<p>The following command will convert all images in current folder</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#66d9ef">for</span> file in *.heic
<span style="color:#66d9ef">do</span>
heif-convert $file <span style="color:#e6db74">${</span>file/%.heic/.jpg<span style="color:#e6db74">}</span>
<span style="color:#66d9ef">done</span>
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>My Linux Setup</title>
            <link>https://securesnowball.github.io/posts/2021/11/my-linux-setup/</link>
            <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
            
            <guid>https://securesnowball.github.io/posts/2021/11/my-linux-setup/</guid>
            <description>My Fresh Linux Installation Setup After installing a Linux sysytem I make many changes to ensure maximum productivity and ensuring it is ready for development, this page contains list of everything
 Installing zsh, tmux: sudo apt install zsh tmux Installing oh my zsh Installing oh my tmux in tmux Installing Fira Code fonts Installing Insomnia as Flatpak Install nvm for NodeJS Installing thefuck zsh plugin and thefuck Installing zsh-autosuggestions plugin Adding helpers Setting paths  Adding thefuck to ZSH Add these lines to .</description>
            <content type="html"><![CDATA[<h2 id="my-fresh-linux-installation-setup">My Fresh Linux Installation Setup</h2>
<p>After installing a Linux sysytem I make many changes to ensure maximum productivity and ensuring it is ready for development, this page contains list of everything</p>
<ul>
<li>Installing zsh, tmux: <code>sudo apt install zsh tmux</code></li>
<li>Installing oh my zsh</li>
<li>Installing oh my tmux in tmux</li>
<li>Installing Fira Code fonts</li>
<li>Installing Insomnia as Flatpak</li>
<li>Install nvm for NodeJS</li>
<li>Installing thefuck zsh plugin and thefuck</li>
<li>Installing zsh-autosuggestions plugin</li>
<li>Adding helpers</li>
<li>Setting paths</li>
</ul>
<h3 id="adding-thefuck-to-zsh">Adding thefuck to ZSH</h3>
<p>Add these lines to .zshrc in the beginning (Beginning part is important)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">pip install --user thefuck
</code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">export PATH<span style="color:#f92672">=</span>$PATH:$HOME/.local/bin <span style="color:#75715e"># For TheFuck</span>
<span style="color:#75715e"># Extra content goes here</span>
plugins<span style="color:#f92672">=(</span>command-not-found git thefuck zsh-autosuggestions<span style="color:#f92672">)</span>
</code></pre></div><h3 id="adding-zsh-hook-for-nvm">Adding ZSH Hook for NVM</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">autoload -U add-zsh-hook
load-nvmrc<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
  local node_version<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>nvm version<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
  local nvmrc_path<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>nvm_find_nvmrc<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

  <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -n <span style="color:#e6db74">&#34;</span>$nvmrc_path<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
    local nvmrc_node_version<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>nvm version <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>nvmrc_path<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span>

    <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> <span style="color:#e6db74">&#34;</span>$nvmrc_node_version<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;N/A&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
      nvm install
    <span style="color:#66d9ef">elif</span> <span style="color:#f92672">[</span> <span style="color:#e6db74">&#34;</span>$nvmrc_node_version<span style="color:#e6db74">&#34;</span> !<span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span>$node_version<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
      nvm use
    <span style="color:#66d9ef">fi</span>
  <span style="color:#66d9ef">elif</span> <span style="color:#f92672">[</span> <span style="color:#e6db74">&#34;</span>$node_version<span style="color:#e6db74">&#34;</span> !<span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>nvm version default<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
    echo <span style="color:#e6db74">&#34;Reverting to nvm default version&#34;</span>
    nvm use default
  <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span>
add-zsh-hook chpwd load-nvmrc
load-nvmrc
</code></pre></div><h3 id="adding-helpers">Adding helpers</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">how_in<span style="color:#f92672">()</span>
<span style="color:#f92672">{</span>
  where<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; shift
  IFS<span style="color:#f92672">=</span>+ curl <span style="color:#e6db74">&#34;https://cht.sh/</span>$where<span style="color:#e6db74">/</span>$*<span style="color:#e6db74">&#34;</span>
<span style="color:#f92672">}</span>
</code></pre></div><h3 id="setting-paths-for-custom-installed-programs">Setting paths for custom installed programs</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># Generic</span>
INSTALL_DIR<span style="color:#f92672">=</span>~/.Installation

<span style="color:#75715e"># Android</span>
export JAVA_HOME<span style="color:#f92672">=</span>/usr/lib/jvm/java-11-openjdk-amd64
export ANDROID_HOME<span style="color:#f92672">=</span>$INSTALL_DIR/Android/SDK
export ANDROID_SDK_ROOT<span style="color:#f92672">=</span>$ANDROID_HOME
PATH<span style="color:#f92672">=</span>$INSTALL_DIR/Android/SDK/platform-tools:$PATH
PATH<span style="color:#f92672">=</span>$PATH:$ANDROID_HOME/bin

<span style="color:#75715e"># Flutter</span>
PATH<span style="color:#f92672">=</span>$PATH:$INSTALL_DIR/Flutter_SDK/bin

<span style="color:#75715e"># PHP Stuff</span>
PATH<span style="color:#f92672">=</span>$PATH:$INSTALL_DIR/Composer
PATH<span style="color:#f92672">=</span>$PATH:~/.config/composer/vendor/bin
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>MySQL User Setup</title>
            <link>https://securesnowball.github.io/posts/2021/11/mysql-user-setup/</link>
            <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
            
            <guid>https://securesnowball.github.io/posts/2021/11/mysql-user-setup/</guid>
            <description>MySQL User Setup Creating a new user in MySQL and restricting it to limited database to ensure security and other common commands
Create a user with permission to all databases sudo mysql -uroot # Fresh Ubuntu system In the following command user, localhost and password should be replaced with real values
# MySQL 8 and above CREATE USER &amp;#39;user&amp;#39;@&amp;#39;localhost&amp;#39;IDENTIFIED WITH mysql_native_password BY &amp;#39;password&amp;#39;; # Before MySQL 8 CREATE USER &amp;#39;user&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;password&amp;#39;; Grant full access to all databases GRANT ALL PRIVILEGES ON * .</description>
            <content type="html"><![CDATA[<h2 id="mysql-user-setup">MySQL User Setup</h2>
<p>Creating a new user in MySQL and restricting it to limited database to ensure security and other common commands</p>
<h3 id="create-a-user-with-permission-to-all-databases">Create a user with permission to all databases</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo mysql -uroot <span style="color:#75715e"># Fresh Ubuntu system</span>
</code></pre></div><p>In the following command <code>user</code>, <code>localhost</code> and <code>password</code> should be replaced with real values</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#f92672">#</span> MySQL <span style="color:#ae81ff">8</span> <span style="color:#66d9ef">and</span> above
<span style="color:#66d9ef">CREATE</span> <span style="color:#66d9ef">USER</span> <span style="color:#e6db74">&#39;user&#39;</span><span style="color:#f92672">@</span><span style="color:#e6db74">&#39;localhost&#39;</span>IDENTIFIED <span style="color:#66d9ef">WITH</span> mysql_native_password <span style="color:#66d9ef">BY</span> <span style="color:#e6db74">&#39;password&#39;</span>;

<span style="color:#f92672">#</span> <span style="color:#66d9ef">Before</span> MySQL <span style="color:#ae81ff">8</span>
<span style="color:#66d9ef">CREATE</span> <span style="color:#66d9ef">USER</span> <span style="color:#e6db74">&#39;user&#39;</span><span style="color:#f92672">@</span><span style="color:#e6db74">&#39;localhost&#39;</span> IDENTIFIED <span style="color:#66d9ef">BY</span> <span style="color:#e6db74">&#39;password&#39;</span>;
</code></pre></div><h3 id="grant-full-access-to-all-databases">Grant full access to all databases</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">GRANT</span> <span style="color:#66d9ef">ALL</span> <span style="color:#66d9ef">PRIVILEGES</span> <span style="color:#66d9ef">ON</span> <span style="color:#f92672">*</span> . <span style="color:#f92672">*</span> <span style="color:#66d9ef">TO</span> <span style="color:#e6db74">&#39;user&#39;</span><span style="color:#f92672">@</span><span style="color:#e6db74">&#39;localhost&#39;</span>;
FLUSH <span style="color:#66d9ef">PRIVILEGES</span>;
</code></pre></div><h3 id="grant-full-access-to-only-one-databases">Grant full access to only one databases</h3>
<p>This is more common since it is best practice to at least create one user per project. Replace <code>dbname</code> with real database name</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">GRANT</span> <span style="color:#66d9ef">ALL</span> <span style="color:#66d9ef">PRIVILEGES</span> <span style="color:#66d9ef">ON</span> dbname.<span style="color:#f92672">*</span> <span style="color:#66d9ef">TO</span> <span style="color:#e6db74">&#39;user&#39;</span><span style="color:#f92672">@</span><span style="color:#e6db74">&#39;localhost&#39;</span>;
</code></pre></div><p>For example process for a project called presentation should be following</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">CREATE</span> <span style="color:#66d9ef">DATABASE</span> presentation;
<span style="color:#66d9ef">CREATE</span> <span style="color:#66d9ef">USER</span> <span style="color:#e6db74">&#39;presentation_user&#39;</span><span style="color:#f92672">@</span><span style="color:#e6db74">&#39;localhost&#39;</span> IDENTIFIED <span style="color:#66d9ef">WITH</span> mysql_native_password <span style="color:#66d9ef">BY</span> <span style="color:#e6db74">&#39;presentation_password&#39;</span>;
<span style="color:#66d9ef">GRANT</span> <span style="color:#66d9ef">ALL</span> <span style="color:#66d9ef">PRIVILEGES</span> <span style="color:#66d9ef">ON</span> presentation.<span style="color:#f92672">*</span> <span style="color:#66d9ef">TO</span> <span style="color:#e6db74">&#39;user&#39;</span><span style="color:#f92672">@</span><span style="color:#e6db74">&#39;localhost&#39;</span>;
FLUSH <span style="color:#66d9ef">PRIVILEGES</span>;
</code></pre></div><h3 id="grant-read-only-access-to-only-one-databases">Grant read only access to only one databases</h3>
<p>Useful for auditing use case where want to share read access but don&rsquo;t want to share write access</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#66d9ef">GRANT</span> <span style="color:#66d9ef">SELECT</span>, <span style="color:#66d9ef">SHOW</span> <span style="color:#66d9ef">VIEW</span> <span style="color:#66d9ef">ON</span> dbname.<span style="color:#f92672">*</span> <span style="color:#66d9ef">TO</span> <span style="color:#e6db74">&#39;user&#39;</span><span style="color:#f92672">@</span><span style="color:#e6db74">&#39;localhost&#39;</span>;
FLUSH <span style="color:#66d9ef">PRIVILEGES</span>;
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Introduction</title>
            <link>https://securesnowball.github.io/posts/2021/10/introduction/</link>
            <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
            
            <guid>https://securesnowball.github.io/posts/2021/10/introduction/</guid>
            <description>Introduction Hi there, I am Captain Snowball. I am a software engineer and I love working with computers, in this blog I will keep stuff I like doing and other usefull things</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Hi there, I am <em>Captain Snowball</em>. I am a software engineer and I love working with computers, in this blog I will keep stuff I like doing and other usefull things</p>
]]></content>
        </item>
        
    </channel>
</rss>
